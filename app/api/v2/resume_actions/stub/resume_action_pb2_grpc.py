# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import app.api.v2.resume_actions.stub.resume_action_pb2 as resume__action__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in resume_action_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ResumeActionServiceStub(object):
    """简历服务定义
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ApplyResumeAccess = channel.unary_unary(
                '/resume.action.v2.ResumeActionService/ApplyResumeAccess',
                request_serializer=resume__action__pb2.ApplyAccessRequest.SerializeToString,
                response_deserializer=resume__action__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.CheckPermission = channel.unary_unary(
                '/resume.action.v2.ResumeActionService/CheckPermission',
                request_serializer=resume__action__pb2.PermissionCheck.SerializeToString,
                response_deserializer=resume__action__pb2.ActionResponse.FromString,
                _registered_method=True)


class ResumeActionServiceServicer(object):
    """简历服务定义
    """

    def ApplyResumeAccess(self, request, context):
        """接口1: 申请访问简历
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPermission(self, request, context):
        """通用权限检查接口
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResumeActionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ApplyResumeAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyResumeAccess,
                    request_deserializer=resume__action__pb2.ApplyAccessRequest.FromString,
                    response_serializer=resume__action__pb2.ActionResponse.SerializeToString,
            ),
            'CheckPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPermission,
                    request_deserializer=resume__action__pb2.PermissionCheck.FromString,
                    response_serializer=resume__action__pb2.ActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'resume.action.v2.ResumeActionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('resume.action.v2.ResumeActionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResumeActionService(object):
    """简历服务定义
    """

    @staticmethod
    def ApplyResumeAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/resume.action.v2.ResumeActionService/ApplyResumeAccess',
            resume__action__pb2.ApplyAccessRequest.SerializeToString,
            resume__action__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/resume.action.v2.ResumeActionService/CheckPermission',
            resume__action__pb2.PermissionCheck.SerializeToString,
            resume__action__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
